/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as PasswordUpdateRouteImport } from './routes/password-update'
import { Route as RedactorRouteRouteImport } from './routes/redactor/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as RedactorArticlesRouteImport } from './routes/redactor/articles'
import { Route as RedactorArticleFormRouteImport } from './routes/redactor/article-form'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const PasswordUpdateRoute = PasswordUpdateRouteImport.update({
  id: '/password-update',
  path: '/password-update',
  getParentRoute: () => rootRouteImport,
} as any)
const RedactorRouteRoute = RedactorRouteRouteImport.update({
  id: '/redactor',
  path: '/redactor',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const RedactorArticlesRoute = RedactorArticlesRouteImport.update({
  id: '/articles',
  path: '/articles',
  getParentRoute: () => RedactorRouteRoute,
} as any)
const RedactorArticleFormRoute = RedactorArticleFormRouteImport.update({
  id: '/article-form',
  path: '/article-form',
  getParentRoute: () => RedactorRouteRoute,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/redactor': typeof RedactorRouteRouteWithChildren
  '/password-update': typeof PasswordUpdateRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/redactor/article-form': typeof RedactorArticleFormRoute
  '/redactor/articles': typeof RedactorArticlesRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/redactor': typeof RedactorRouteRouteWithChildren
  '/password-update': typeof PasswordUpdateRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/redactor/article-form': typeof RedactorArticleFormRoute
  '/redactor/articles': typeof RedactorArticlesRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/redactor': typeof RedactorRouteRouteWithChildren
  '/password-update': typeof PasswordUpdateRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
  '/redactor/article-form': typeof RedactorArticleFormRoute
  '/redactor/articles': typeof RedactorArticlesRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/redactor'
    | '/password-update'
    | '/sign-in'
    | '/sign-up'
    | '/redactor/article-form'
    | '/redactor/articles'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/redactor'
    | '/password-update'
    | '/sign-in'
    | '/sign-up'
    | '/redactor/article-form'
    | '/redactor/articles'
  id:
    | '__root__'
    | '/'
    | '/redactor'
    | '/password-update'
    | '/sign-in'
    | '/sign-up'
    | '/redactor/article-form'
    | '/redactor/articles'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  RedactorRouteRoute: typeof RedactorRouteRouteWithChildren
  PasswordUpdateRoute: typeof PasswordUpdateRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/password-update': {
      id: '/password-update'
      path: '/password-update'
      fullPath: '/password-update'
      preLoaderRoute: typeof PasswordUpdateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/redactor': {
      id: '/redactor'
      path: '/redactor'
      fullPath: '/redactor'
      preLoaderRoute: typeof RedactorRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/redactor/articles': {
      id: '/redactor/articles'
      path: '/articles'
      fullPath: '/redactor/articles'
      preLoaderRoute: typeof RedactorArticlesRouteImport
      parentRoute: typeof RedactorRouteRoute
    }
    '/redactor/article-form': {
      id: '/redactor/article-form'
      path: '/article-form'
      fullPath: '/redactor/article-form'
      preLoaderRoute: typeof RedactorArticleFormRouteImport
      parentRoute: typeof RedactorRouteRoute
    }
  }
}

interface RedactorRouteRouteChildren {
  RedactorArticleFormRoute: typeof RedactorArticleFormRoute
  RedactorArticlesRoute: typeof RedactorArticlesRoute
}

const RedactorRouteRouteChildren: RedactorRouteRouteChildren = {
  RedactorArticleFormRoute: RedactorArticleFormRoute,
  RedactorArticlesRoute: RedactorArticlesRoute,
}

const RedactorRouteRouteWithChildren = RedactorRouteRoute._addFileChildren(
  RedactorRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  RedactorRouteRoute: RedactorRouteRouteWithChildren,
  PasswordUpdateRoute: PasswordUpdateRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
