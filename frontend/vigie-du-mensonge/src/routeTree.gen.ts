/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as SignUpRouteImport } from './routes/sign-up'
import { Route as SignInRouteImport } from './routes/sign-in'
import { Route as PasswordUpdateRouteImport } from './routes/password-update'
import { Route as ArticleFormRouteImport } from './routes/article-form'
import { Route as IndexRouteImport } from './routes/index'

const SignUpRoute = SignUpRouteImport.update({
  id: '/sign-up',
  path: '/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const SignInRoute = SignInRouteImport.update({
  id: '/sign-in',
  path: '/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const PasswordUpdateRoute = PasswordUpdateRouteImport.update({
  id: '/password-update',
  path: '/password-update',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticleFormRoute = ArticleFormRouteImport.update({
  id: '/article-form',
  path: '/article-form',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/article-form': typeof ArticleFormRoute
  '/password-update': typeof PasswordUpdateRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/article-form': typeof ArticleFormRoute
  '/password-update': typeof PasswordUpdateRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/article-form': typeof ArticleFormRoute
  '/password-update': typeof PasswordUpdateRoute
  '/sign-in': typeof SignInRoute
  '/sign-up': typeof SignUpRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/article-form'
    | '/password-update'
    | '/sign-in'
    | '/sign-up'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/article-form' | '/password-update' | '/sign-in' | '/sign-up'
  id:
    | '__root__'
    | '/'
    | '/article-form'
    | '/password-update'
    | '/sign-in'
    | '/sign-up'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ArticleFormRoute: typeof ArticleFormRoute
  PasswordUpdateRoute: typeof PasswordUpdateRoute
  SignInRoute: typeof SignInRoute
  SignUpRoute: typeof SignUpRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/sign-up': {
      id: '/sign-up'
      path: '/sign-up'
      fullPath: '/sign-up'
      preLoaderRoute: typeof SignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/sign-in': {
      id: '/sign-in'
      path: '/sign-in'
      fullPath: '/sign-in'
      preLoaderRoute: typeof SignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/password-update': {
      id: '/password-update'
      path: '/password-update'
      fullPath: '/password-update'
      preLoaderRoute: typeof PasswordUpdateRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/article-form': {
      id: '/article-form'
      path: '/article-form'
      fullPath: '/article-form'
      preLoaderRoute: typeof ArticleFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ArticleFormRoute: ArticleFormRoute,
  PasswordUpdateRoute: PasswordUpdateRoute,
  SignInRoute: SignInRoute,
  SignUpRoute: SignUpRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
